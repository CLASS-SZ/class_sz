# Explanatory parameter file for class_sz

path_to_class = /Users/boris/Work/CLASS-SZ/SO-SZ/class_sz

#------------------------------#
# Main cosmological parameters #
#------------------------------#

h = 0.67
omega_b = 0.0245
omega_cdm = 0.1225
tau_reio = 0.07
A_s = 2.02e-9
n_s = 0.96
k_pivot = 0.05

N_ncdm = 1
N_ur = 0.00641
deg_ncdm = 3
m_ncdm = 0.02
T_ncdm = 0.71611


#---------#
# Outputs #
#---------#

# 1: tSZ_1h -> tSZ power spectrum (1-halo term)
# 2: tSZ_2h -> tSZ power spectrum (2-halo term)
# 3: tSZ_Trispectrum -> tSZ trispectrum
# 4: tSZ_te_y_y -> Te*y*y power spectrum
# 5: tSZ_cov_Y_N -> covariance Y-N
# 6: hmf -> total number of halos within mass M1-M2 and redshift z1-z2
# 7: mean_y -> total y-distortion
# 8: SZ_counts -> Halo number counts binned in signal-to-noise and redshift

# IMPORTANT:
# Note that any computation requiring linear bias 'b(M,z)', such as 2-halo term
# or halo/super sample variance terms are done at m200mean and hence should be
# computed using HMF's evaluated at m200mean (e.g., T10).
# In the next version we will allow for mass conversions everywhere in the code and any
# HMF's will be fine.

output = tSZ_1h
root = output/class-sz_simple_

write sz results to files = yes


#------------------------------------#
# Main settings for tSZ computations #
#------------------------------------#


# Survey sky fraction
# relevant for variance/covariance calculations

f_sky = 1.


# Hydrostatic mass bias
B = 1.41

# Halo mass range in M_sun/h

M1SZ = 1e11
M2SZ = 5e15

# integration method (mass):
# 1: patterson (default)
# 2: gsl_qags
# 3: gsl_qag
# 3: gsl_qng

integration method (mass) = patterson

mass_epsrel = 1e-3
mass_epsabs = 1e-30


#integration method (mass) = gsl_qags

# number of mass bins for cov(Y,N)

number of mass bins for cov(Y,N) = 20

# Redshift range
# The redshift integration is carried out with Jens Chluba's Patterson scheme
z1SZ = 1.e-5
z2SZ = 4.

redshift_epsrel = 1e-3
redshift_epsabs = 1e-30

#z_max_pk has to be at least z2SZ
#it is a necessary parameter, class_sz returns 'NaN' if this parameter
#is not set properly.

z_max_pk = 4.

# Halo Mass Function

mass function = 'M500'

# Use linear matter power spectrum P_cb
# for the computation of sigma(R,z) in HMF
# HMF_prescription_NCDM = CDM

HMF_prescription_NCDM = CDM

# Pressure Profile for tSZ power spectrum
# 1: 'P13' -> Planck 2013 pressure profile (SZ and X-ray data, A&A 550, A131 (2013))
# 2: 'A10' -> Arnaud et al 2010 pressure profile (default, X-ray data, arXiv:0910.1234)
# 3: 'Custom. GNFW' -> In this case one can enter the values of the parameters
#     for the GNFW fitting function:
#     P0GNFW = xxx
#     c500 = xxx
#     alphaGNFW = xxx
#     betaGNFW = xxx
#     gammaGNFW = xxx
# 4: 'B12' -> Battaglia et al 2012 [ApJ 758 75] currently works with T10 HMF
#     Note that B12 pressure profile does not currently work with T08@M500
#     because for this mass function we don not convert to M200c needed by B12
#     Integral over mass: mvir
#     Pressure profile: r200c
#     conversions w. D08 CM relation

pressure profile = A10

# integration method (pressure profile)
# 1: gsl (default - 'qawo' method)
# 2: patterson
# 3: spline

integration method (pressure profile) = gsl

pressure_profile_epsabs = 1.e-9
pressure_profile_epsrel = 1.e-10

# Temperature mass relation
# 1: 'standard'
# 2: 'lee et al 2019'

temperature mass relation = 'lee et al 2019'

#----------------------------------------------#
# Units and Multipoles for tSZ power spectrum  #
#----------------------------------------------#

# Units for power spectrum :
# 1: dimensionless
# 2: muK2

units for tSZ spectrum = 'dimensionless'


multipoles_sz = ell_mock
ell_max_mock = 15000.
ell_min_mock = 2.
dlogell = 0.2

# Uncomment below to compute at the 18 multipole bins of the Planck analysis
# multipoles_sz = P15


#----------------------------------#
# Component of tSZ power spectrum  #
#----------------------------------#

# This option is to specify whether we want to take into account the contribution from all clusters,
# or just the contribution from the clusters detected by an experiment.

# 1: 'total' (default, computes the tSZ power spectrum from all halos between [M1SZ,M2SZ] and [z1SZ,z2SZ])
# 2: 'resolved' (from all halos over the signal-to-noise cut-off of Planck SZ, same as Planck 2015 cluster counts analysis)
# 3: 'diffuse' (i.e., un-resolved, anti of the above, i.e., '1-x')

# See Rotti++ 20 for details.
# Note that this version uses the sky-averaged Planck noise map.

component of tSZ power spectrum = total

# s/n cut-off only relevant for diffuse and resolved components
signal-to-noise cut-off for ps completeness analysis = 6.



#-----------------#
# Cluster counts  #
#-----------------#

# Mass bounds for integration of HMF
# 1: '0' -> M1SZ and M2SZ as above.
# 2: '1' -> cosmomc/szount.f90 range (ln(M_max)=37; ln(M_min)=31.54)

mass_range = 1

# Take into account survey completeness?
# 1: '0' -> no
# 2: '1' -> yes

has_completeness_for_cc = 0

# Which experiment for the survey completeness?
# 1: '0' -> Planck
# 2: '1' -> Simons Observatory

experiment = 0

# Set maximum redshift for cluster counts
# z_max = 1 for the Planck likelihood

max redshift for cluster counts = 1.

#----------------#
# kSZ / lensing  #
#----------------#

nfw_profile_epsrel = 1.e-9
nfw_profile_epsabs = 1.e-10





#------------------------------#
# Verbose and write parameters #
#------------------------------#

sz_verbose = 1
background_verbose = 1

headers = yes
write primordial = no
write background = no
write parameters = yes

# To write the reference trispectrum to be used in cobaya
# for the tSZ power spectrum likelihood, set the following to 'YES'.
# This creates three files in sz_auxiliary_files/cobaya_class_sz_likelihoods/cobaya_reference_trispectrum:
# 1: tSZ_c_ell_ref_xx.txt
# 2: tSZ_params_ref_xx.txt
# 3: tSZ_trispectrum_ref_xx.txt
# where 'xx' is the string given in 'append_name_cobaya_ref'

create_ref_trispectrum_for_cobaya = NO
path_to_ref_trispectrum_for_cobaya = sz_auxiliary_files/cobaya_class_sz_likelihoods/cobaya_reference_trispectrum/
append_name_cobaya_ref = total
