; run with:
; $ cosmosis /Users/boris/Work/CLASS-SZ/SO-SZ/class_sz/class_sz_mcmcs/input_files/cosmosis_des-y3_test_classy_sz.ini
; from inside the cosmosis-standard-library directory 
[runtime]
sampler =  test



; This parameter is used several times in this file, so is
; put in the DEFAULT section and is referenced below as %(2PT_FILE)s
[DEFAULT]
2PT_FILE = likelihood/des-y3/2pt_NG_final_2ptunblind_02_24_21_wnz_covupdate.v2.fits

[pipeline]
modules =  consistency  bbn_consistency
           class_sz  fast_pt
           fits_nz  lens_photoz_width  lens_photoz_bias  source_photoz_bias
           IA  pk_to_cl_gg  pk_to_cl
           add_magnification  add_intrinsic
           2pt_shear 2pt_gal  2pt_gal_shear
           shear_m_bias   add_point_mass
           2pt_like  shear_ratio_like

quiet=F
timing=T
debug=F
priors = examples/des-y3-priors.ini
values = examples/des-y3-values_1nu.ini
extra_output = cosmological_parameters/sigma_8 cosmological_parameters/sigma_12 data_vector/2pt_chi2


; It's worth switching this to T when sampling using multinest, polychord,
; or other samplers that can take advantage of differences in calculation speeds between
; different parameters.
fast_slow = F
first_fast_module = shear_m_bias
; For some use cases this might be faster:
;first_fast_module=lens_photoz_width


; This is the sampler used for the DES-Y3 releases.
[polychord]
base_dir = output/y3-polychord-checkpoints
polychord_outfile_root = y3
resume = F
feedback = 3
fast_fraction = 0.1

;Minimum settings
live_points = 250
num_repeats = 30
tolerance = 0.1

;Settings for paper runs
; live_points = 500
; num_repeats=60
; tolerance=0.01
; boost_posteriors=10.0

[output]
filename = /Users/boris/Work/CLASS-SZ/SO-SZ/class_sz/class_sz_mcmcs/chains/des-y3_test.txt
format=text

; you can set this to T if you don't want
privacy = F

[emcee]
walkers = 80
samples = 10000
nsteps = 5


; This sampler makes a 1D likelihood slice in each dimension
; It's handy for doing a thorough comparison to other codes
[star]
nsample_dimension = 20

[test]
save_dir=/Users/boris/Work/CLASS-SZ/SO-SZ/class_sz/class_sz_mcmcs/chains/des-y3_test
fatal_errors=T


[consistency]
file = utility/consistency/consistency_interface.py


[bbn_consistency]
file = utility/bbn_consistency/bbn_consistency.py

[class_sz]
file = /Users/boris/Work/CLASS-SZ/SO-SZ/class_sz/python/classy_szfast/classy_szfast/cosmosis_classy_szfast_interface.py
version = 2.9.4
lmax = 2850
debug = T
zmax = 4.0
cmb = F
mpk = T
lensing = F
class_non_linear = hmcode
save_matter_power_lin = T

[fits_nz]
file = number_density/load_nz_fits/load_nz_fits.py
nz_file = %(2PT_FILE)s
data_sets = lens source
prefix_section = T
prefix_extension = T

[fits_nz_lens]
file = number_density/load_nz_fits/load_nz_fits.py
nz_file = %(2PT_FILE)s
data_sets = lens
prefix_section = T
prefix_extension = T

[lens_photoz_width]
file = number_density/photoz_width/photoz_width.py
mode = stretch
sample = nz_lens
bias_section = lens_photoz_errors
interpolation = linear

[lens_photoz_bias]
file = number_density/photoz_bias/photoz_bias.py
mode = additive
sample = nz_lens
bias_section = lens_photoz_errors
interpolation = linear

; hyperrank and source_photoz_bias are exclusive
[hyperrank]
file = number_density/nz_multirank/nz_multirank.py
nz_file = %(2PT_FILE)s
data_set = source
dimensions = 3
bin_ranks= 1 2 4

[source_photoz_bias]
file = number_density/photoz_bias/photoz_bias.py
mode = additive
sample = nz_source
bias_section = wl_photoz_errors
interpolation = linear

[fast_pt]
file = structure/fast_pt/fast_pt_interface.py
do_ia = T
k_res_fac = 0.5
verbose = F

[IA]
file = intrinsic_alignments/tatt/tatt_interface.py
sub_lowk = F
do_galaxy_intrinsic = F
ia_model = tatt

[pk_to_cl_gg]
file = structure/projection/project_2d.py
lingal-lingal = lens-lens
do_exact = lingal-lingal
do_rsd = True
ell_min_linspaced = 1
ell_max_linspaced = 4
n_ell_linspaced = 5
ell_min_logspaced = 5.
ell_max_logspaced = 5.e5
n_ell_logspaced = 80
limber_ell_start = 200
ell_max_logspaced=1.e5
auto_only=lingal-lingal
sig_over_dchi_exact = 3.5

[pk_to_cl]
file = structure/projection/project_2d.py
ell_min_logspaced = 0.1
ell_max_logspaced = 5.0e5
n_ell_logspaced = 100
shear-shear = source-source
shear-intrinsic = source-source
intrinsic-intrinsic = source-source
intrinsicb-intrinsicb=source-source
lingal-shear = lens-source
lingal-intrinsic = lens-source
lingal-magnification = lens-lens
magnification-shear = lens-source
magnification-magnification = lens-lens
magnification-intrinsic = lens-source
verbose = F
get_kernel_peaks = F
sig_over_dchi = 20.
shear_kernel_dchi = 10.

[add_magnification]
file = structure/magnification/add_magnification.py
include_intrinsic=T

[add_intrinsic]
file=shear/add_intrinsic/add_intrinsic.py
shear-shear=T
position-shear=T
perbin=F

[add_eb]
file = intrinsic_alignments/add_b_mode/add_b_mode_cl.py

[2pt_shear]
file = shear/cl_to_xi_fullsky/cl_to_xi_interface.py
ell_max = 40000
xi_type = EB
theta_file=%(2PT_FILE)s
bin_avg = T
; these get
input_section_name = shear_cl  shear_cl_bb
output_section_name = shear_xi_plus  shear_xi_minus

[2pt_gal]
file = shear/cl_to_xi_fullsky/cl_to_xi_interface.py
ell_max = 40000
xi_type='00'
theta_file=%(2PT_FILE)s
bin_avg = T

[2pt_gal_shear]
file = shear/cl_to_xi_fullsky/cl_to_xi_interface.py
ell_max = 40000
xi_type='02'
theta_file=%(2PT_FILE)s
bin_avg = T

[shear_m_bias]
file = shear/shear_bias/shear_m_bias.py
m_per_bin = True
; Despite the parameter name, this can operate on xi as well as C_ell.
cl_section = shear_xi_plus shear_xi_minus
cross_section = galaxy_shear_xi
verbose = F

[add_point_mass]
file=shear/point_mass/add_gammat_point_mass.py
add_togammat = False
use_fiducial = True
sigcrit_inv_section = sigma_crit_inv_lens_source

[2pt_like]
file = likelihood/2pt/2pt_point_mass/2pt_point_mass.py
do_pm_marg = True
do_pm_sigcritinv = True
sigma_a = 10000.0
no_det_fac = False
include_norm = True
data_file = %(2PT_FILE)s
data_sets = xip xim gammat wtheta
make_covariance=F
covmat_name=COVMAT

; we put these in a separate file because they are long
%include examples/des-y3-scale-cuts.ini


; The small-scale galaxy galaxy-lensing correlations have uncertain
; enough modelling that we can't use them directly, but the ratio between
; sets of correlations can be used, since it only depends on geometry
[shear_ratio_like]
file = likelihood/des-y3/shear_ratio/shear_ratio_likelihood.py
data_file = likelihood/des-y3/shear_ratio/2pt_NG_final_2ptunblind_02_24_21_wnz_covupdate_sr.pkl
theta_min_1 = 9.0  6.0  4.5  2.5  2.5
theta_min_2 = 9.0  6.0  4.5  2.5  2.5
theta_min_3 = 2.5  2.5  4.5  2.5  2.5
theta_max = 26.83313651 17.63634989 13.61215672 11.32891161 10.01217238
include_norm = T


;;;;;;;;;;EXTERNAL LIKELIHOODS;;;;;;;;;;

; These external likelihoods can be enabled by adding the name
; of the section to the list of modules above.
; Note that many of the Planck modules should be mutually exclusive
; and also that if you switch on planck lensing you should uncomment
; some parameters in the [camb] section above

;;CMB;;
[p-TTTEEE-lowE]
;Planck 2018 high ell TT,TE and EE + low ell TT + low ell EE (in Planck notations = TT+lowE)
;without CMB lensing
file = likelihood/planck2018/planck_interface.so
;high ell TT,TE and EE
data_1 = ${PLANCKPATH}/hi_l/plik/plik_rd12_HM_v22b_TTTEEE.clik
;low ell TT
data_2 = ${PLANCKPATH}/low_l/commander/commander_dx12_v3_2_29.clik
;low ell EE
data_3 = ${PLANCKPATH}/low_l/simall/simall_100x143_offlike5_EE_Aplanck_B.clik

[p-TTTEEE_lite-lowE]
;Planck 2018 high ell TT,TE and EE + low ell TT + low ell EE (in Planck notations = TT+lowE)
;without CMB lensing
file = likelihood/planck2018/planck_interface.so
;high ell TT,TE and EE lite
data_1 = ${PLANCKPATH}/hi_l/plik_lite/plik_lite_v22_TTTEEE.clik
;low ell TT
data_2 = ${PLANCKPATH}/low_l/commander/commander_dx12_v3_2_29.clik
;low ell EE
data_3 = ${PLANCKPATH}/low_l/simall/simall_100x143_offlike5_EE_Aplanck_B.clik

[p-TTTEEE-lowE-lensing]
;Planck 2018 high ell TT,TE and EE + low ell TT + low ell EE (in Planck notations = TT+lowE)
;with CMB lensing
file = likelihood/planck2018/planck_interface.so
;high ell TT,TE and EE
data_1 = ${PLANCKPATH}/hi_l/plik/plik_rd12_HM_v22b_TTTEEE.clik
;low ell TT
data_2 = ${PLANCKPATH}/low_l/commander/commander_dx12_v3_2_29.clik
;low ell EE
data_3 = ${PLANCKPATH}/low_l/simall/simall_100x143_offlike5_EE_Aplanck_B.clik
;lensing
lensing_1 = ${PLANCKPATH}/lensing/smicadx12_Dec5_ftl_mv2_ndclpp_p_teb_consext8.clik_lensing

[p-TTTEEE_lite-lensing]
;Planck 2018 high ell TT,TE and EE + low ell TT + low ell EE (in Planck notations = TT+lowE)
;without CMB lensing
file = likelihood/planck2018/planck_interface.so
;high ell TT,TE and EE lite
data_1 = ${PLANCKPATH}/hi_l/plik_lite/plik_lite_v22_TTTEEE.clik
;lensing
lensing_1 = ${PLANCKPATH}/lensing/smicadx12_Dec5_ftl_mv2_ndclpp_p_teb_consext8.clik_lensing

[p-TTTEEE_lite-lowE-lensing]
;Planck 2018 high ell TT,TE and EE + low ell TT + low ell EE (in Planck notations = TT+lowE)
;without CMB lensing
file = likelihood/planck2018/planck_interface.so
;high ell TT,TE and EE lite
data_1 = ${PLANCKPATH}/hi_l/plik_lite/plik_lite_v22_TTTEEE.clik
;low ell TT
data_2 = ${PLANCKPATH}/low_l/commander/commander_dx12_v3_2_29.clik
;low ell EE
data_3 = ${PLANCKPATH}/low_l/simall/simall_100x143_offlike5_EE_Aplanck_B.clik
;lensing
lensing_1 = ${PLANCKPATH}/lensing/smicadx12_Dec5_ftl_mv2_ndclpp_p_teb_consext8.clik_lensing

[p-lensing]
;Planck 2018 CMB lensing
file = likelihood/planck2018/planck_interface.so
;lensing
lensing_1 = ${PLANCKPATH}/lensing/smicadx12_Dec5_ftl_mv2_ndclpp_p_teb_consext8_CMBmarged.clik_lensing

;;BAO;;
[6dfgs]
file = likelihood/6dfgs/6dfgs.py
;6dfgs measurement of r_s/D_v (if you want to use only D_v, set bao_mode to dv).
bao_mode = "rs_dv"

[mgs_bao]
file = likelihood/mgs_bao/mgs_bao.py

[bossdr12_gal]
file = likelihood/boss_dr12/boss_dr12.py
;set to 0 for BAO only, to 1 for BAOxf*sigma8
mode = 0
feedback = 0

#BOSS DR12 likelihood, reanalyzed by eboss dr16 and where highest redshift bin is removed
# !! This module (not the one above)
# should be used when using bossdr12 with ebossdr16 !!
[bossdr12_reanalyze]
file = likelihood/eboss_dr16/boss_dr12/boss_dr12_lrg_reanalyze.py
mode = 0
feedback = F

;!!!!!!
;DESY3 BAO is for now simulated.
;!!!!!!
[bao_desy3]
;simulated version of DES Y3 BAO
file = cosmosis-des-library/lss/bao_y3_like/bao_y3_like.py

[bao_desy1]
file = cosmosis-des-library/lss/bao_y1_like/bao_y1_like.py

;!!!!!!
;eboss dr16
;!!!!!!
[eboss16_lrg]
file = likelihood/eboss_dr16/lrg/eboss_dr16_lrg.py
mode = 0
feedback = F

[eboss16_elg]
file = likelihood/eboss_dr16/elg/eboss_dr16_elg.py
mode = 0
feedback = F

[eboss16_qso]
file = likelihood/eboss_dr16/qso/eboss_dr16_qso.py
mode = 0
feedback = F

[eboss16_lya]
file = likelihood/eboss_dr16/lya/eboss_dr16_lya.py
feedback = F

;;SN;;
[pantheon]
file = likelihood/pantheon/pantheon.py

[riess16]
file = likelihood/riess16/riess16.py

[des_sne]
file = ${COSMOSIS_SRC_DIR}/likelihood/pantheon/pantheon.py
data_file = ../data/Y1_DESSN_ONLY_COSMOSIS_FILES/lcparam_DESONLY_V8_0.txt
covmat_file = ../data/Y1_DESSN_ONLY_COSMOSIS_FILES/sys_DESONLY_V8_AVG_0.txt

;;RSD;;
[6dfgs_baorsd]
file = external/bao/6dfgs/6dfgs.py
rsd_like = T

[mgs_baorsd]
file = likelihood/eboss_dr16/mgs/mgs.py

[bossdr12_reanalyze_baorsd]
file = likelihood/eboss_dr16/boss_dr12/boss_dr12_lrg_reanalyze.py
;set to 0 for BAO only, to 1 for BAOxf*sigma8
mode = 1
feedback = F

[eboss16_lrg_baorsd]
file = likelihood/eboss_dr16/lrg/eboss_dr16_lrg.py
mode = 1
feedback = F

[eboss16_elg_baorsd]
file = likelihood/eboss_dr16/elg/eboss_dr16_elg.py
mode = 1
feedback = F

[eboss16_qso_baorsd]
file = likelihood/eboss_dr16/qso/eboss_dr16_qso.py
mode = 1
feedback = F

[bbn]
file = likelihood/bbn/bbn_ombh2_pitrou20_cooke18/bbn_ombh2_pitrou20_cooke18.py



; This can be used to simulate a data vector from a pipeline
[save_2pt]
file = likelihood/2pt/save_2pt.py
theta_min = 2.5
theta_max = 250.0
n_theta = 20
real_space = T
make_covariance = F
shear_nz_name = nz_source
position_nz_name = nz_lens
filename = output/sim_y3.fits
overwrite = T
auto_only = galaxy_xi
;cut_wtheta = 1,2 1,3 2,3 1,4 2,4 3,4 1,5 2,5 3,5 4,5
spectrum_sections = shear_xi_plus shear_xi_minus galaxy_shear_xi galaxy_xi
output_extensions = xip xim gammat wtheta
two_thirds_midpoint = T
copy_covariance=data_vectors/${DATAFILE}
